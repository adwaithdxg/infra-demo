version: '3.8'

services:
  dev-nginx:
    image: nginx:latest
    container_name: dev-nginx
    ports:
      - "9000:80"
      - "8444:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/proxy_params:/etc/nginx/proxy_params:ro
      - ./nginx/ssl_params:/etc/nginx/ssl_params:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - dev-redis
      - dev-rabbitmq
      - dev-mongodb
    networks:
      - fieldiva-development-network
      - development_nginx_shared
      - main-network
    restart: unless-stopped

  dev-redis:
    image: redis:latest
    container_name: dev-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./configs/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      REDIS_USERNAME: "${REDIS_USERNAME}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    networks:
      - fieldiva-development-network
    restart: unless-stopped

  dev-rabbitmq:
    image: rabbitmq:3.13-management
    container_name: dev-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
      RABBITMQ_DEFAULT_VHOST: "/"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - fieldiva-development-network
    restart: unless-stopped

  dev-mongodb:
    image: mongo:latest
    container_name: dev-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: "${MONGO_INITDB_DATABASE}"
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
    command: mongod --bind_ip_all
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok === 1"]
      interval: 10s
      timeout: 30s
      retries: 10
    networks:
      - fieldiva-development-network
    restart: unless-stopped

networks:
  development_nginx_shared:
    external: true
  fieldiva-development-network:
    external: true
  main-network:
    external: true

volumes:
  redis_data:
  rabbitmq_data:
  mongo_data:
