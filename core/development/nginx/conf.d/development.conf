# Security Headers
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header X-Content-Type-Options "nosniff" always;

# CORS (Development – allow all)
add_header 'Access-Control-Allow-Origin' '*' always;
add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,User-Agent,Cache-Control,DNT,X-Requested-With,If-Modified-Since,Range' always;
add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

# Handle Preflight
if ($request_method = OPTIONS) {
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,User-Agent,Cache-Control,DNT,X-Requested-With,If-Modified-Since,Range' always;
    add_header 'Access-Control-Max-Age' 1728000;
    return 204;
}

# Health Check
location /health {
    access_log off;
    return 200 "healthy\n";
    add_header Content-Type text/plain;
}

# Routes
location /api/organizationAdmin/ {
    limit_req zone=api burst=20 nodelay;
    proxy_pass http://organizationadmin_service/;
}

location /api/fielduser/ {
    limit_req zone=api burst=20 nodelay;
    proxy_pass http://fielduser_service/;
}

location /api/admin/ {
    limit_req zone=auth burst=20 nodelay;
    proxy_pass http://admin_service/;
}

location /api/form/ {
    limit_req zone=api burst=20 nodelay;
    proxy_pass http://form_service/;
}

location /api/media/ {
    limit_req zone=api burst=50 nodelay;
    client_max_body_size 500M;
    proxy_pass http://media_service/;
}

location /api/live-location/ {
    limit_req zone=api burst=30 nodelay;
    proxy_pass http://live_location_service/;
}


# No need to expose the notifications path
# location /api/notifications/ {
#     limit_req zone=api burst=20 nodelay;
#     proxy_pass http://notification_service/;
# }

# WebSocket (Live Location)
location /live-location/socket.io/ {
    proxy_pass http://live_location_service;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_cache_bypass $http_upgrade;
    proxy_connect_timeout 10s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
}

# Default Route – API Gateway status
location / {
    return 200 '{
        "message": "Fieldiva Core API Gateway - Development",
        "status": "online",
        "timestamp": "$time_iso8601",
        "services": {
            "org-admin": "http://localhost:3003",
            "fielduser": "http://localhost:3004",
            "admin": "http://localhost:3005",
            "form": "http://localhost:3006",
            "media": "http://localhost:3007",
            "location": "http://localhost:3008",
            "notification": "http://localhost:3009"
        }
    }';
    add_header Content-Type application/json;
}

# Error Pages
error_page 404 /404.html;
error_page 500 502 503 504 /50x.html;

location = /50x.html {
    return 500 '{"error":"Internal Server Error","message":"Service temporarily unavailable"}';
    add_header Content-Type application/json;
}
