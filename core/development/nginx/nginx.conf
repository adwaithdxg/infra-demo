user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Include proxy and SSL params
    include /etc/nginx/proxy_params;
    include /etc/nginx/ssl_params;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/json
        application/javascript
        application/xml
        text/css
        text/javascript
        text/plain;

    # Rate Limiting Zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=50r/m;

    # Upstreams (match docker-compose service names)
    upstream organizationadmin_service {
        server dev-organizationadmin-service:8003;
        keepalive 32;
    }
    upstream fielduser_service {
        server dev-fielduser-service:8004;
        keepalive 32;
    }
    upstream admin_service {
        server dev-admin-service:8005;
        keepalive 32;
    }
    upstream form_service {
        server dev-form-service:8006;
        keepalive 32;
    }
    upstream media_service {
        server dev-media-service:8007;
        keepalive 32;
    }
    upstream live_location_service {
        server dev-live-location-service:8008;
        keepalive 32;
    }
    upstream notification_service {
        server dev-notification-service:8009;
        keepalive 32;
    }

    # HTTP Server
    server {
        listen 80;
        server_name localhost fieldiva-dev.local;

        # ðŸ”¹ Include all application logic
        include /etc/nginx/conf.d/development.conf;
    }

    # HTTPS Server
    server {
        listen 443 ssl;
        server_name localhost fieldiva-dev.local;

        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

        include /etc/nginx/ssl_params;

        # ðŸ”¹ Reuse same application logic
        include /etc/nginx/conf.d/development.conf;
    }
}
